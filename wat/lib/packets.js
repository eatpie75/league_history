// Generated by CoffeeScript 1.3.3
(function() {
  var ASObject, AggregatedStatsPacket, AuthPacket, ConnectPacket, Decoder, Encoder, GetMasteryBookPacket, GetSpectatorInfoPacket, GetSummonerDataPacket, GetSummonerNamePacket, GetTeamByIdPacket, GetTeamForSummonerPacket, HeartbeatPacket, LoginPacket, LookupPacket, Packet, PlayerStatsPacket, RecentGamesPacket, uuid,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  uuid = require('node-uuid');

  Encoder = require('namf/amf0').Encoder;

  Decoder = require('namf/amf0').Decoder;

  ASObject = require('namf/messaging').ASObject;

  Packet = (function() {

    function Packet(options) {
      this.options = options;
    }

    return Packet;

  })();

  ConnectPacket = (function(_super) {

    __extends(ConnectPacket, _super);

    function ConnectPacket() {
      return ConnectPacket.__super__.constructor.apply(this, arguments);
    }

    ConnectPacket.prototype.appObject = function() {
      var object;
      object = {
        app: '',
        flashVer: 'WIN 10,1,85,3',
        swfUrl: 'app:/mod_ser.dat',
        tcUrl: 'rtmps://beta.lol.riotgames.com:2099',
        fpad: false,
        capabilities: 239,
        audioCodecs: 3191,
        videoCodecs: 252,
        videoFunction: 1,
        pageUrl: void 0,
        objectEncoding: 3
      };
      return object;
    };

    ConnectPacket.prototype.commandObject = function() {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.CommandMessage';
      object.object = {
        operation: 5,
        correlationId: '',
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: '9DC6600E-8F54-604F-AB39-1515B4CBE8AA',
        destination: '',
        headers: {
          DSMessagingVersion: 1,
          DSId: 'my-rtmps'
        },
        body: {}
      };
      return object;
    };

    return ConnectPacket;

  })(Packet);

  LoginPacket = (function(_super) {

    __extends(LoginPacket, _super);

    function LoginPacket() {
      LoginPacket.__super__.constructor.apply(this, arguments);
    }

    LoginPacket.prototype.generate = function(clientVersion) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.keys = ['operation', 'source', 'timestamp', 'clientId', 'timeToLive', 'messageId', 'destination', 'headers', 'body'];
      object.object = {
        operation: 'login',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'loginService',
        headers: this.generateHeaders(),
        body: [this.generateBody(clientVersion)]
      };
      object.encoding = 0;
      return object;
    };

    LoginPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    LoginPacket.prototype.generateBody = function(clientVersion) {
      var body;
      body = new ASObject();
      body.name = 'com.riotgames.platform.login.AuthenticationCredentials';
      body.keys = ['oldPassword', 'password', 'authToken', 'locale', 'partnerCredentials', 'ipAddress', 'domain', 'username', 'clientVersion', 'securityAnswer'];
      body.object = {
        password: this.options.password,
        authToken: this.options.queueToken,
        locale: 'en_US',
        ipAddress: this.options.queue_ip != null ? this.options.queue_ip : '203.59.95.218',
        domain: 'lolclient.lol.riotgames.com',
        username: this.options.username,
        clientVersion: clientVersion,
        operatingSystem: 'Windows 7',
        securityAnswer: null,
        partnerCredentials: null,
        oldPassword: null
      };
      body.encoding = 0;
      return body;
    };

    return LoginPacket;

  })(Packet);

  AuthPacket = (function(_super) {

    __extends(AuthPacket, _super);

    function AuthPacket() {
      return AuthPacket.__super__.constructor.apply(this, arguments);
    }

    AuthPacket.prototype.generate = function() {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.CommandMessage';
      object.keys = ['operation', 'correlationId', 'timestamp', 'clientId', 'timeToLive', 'messageId', 'destination', 'headers', 'body'];
      object.object = {
        operation: 8,
        correlationId: '',
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'auth',
        headers: this.generateHeaders(),
        body: new Buffer("" + this.options.username + ":" + this.options.authToken, 'utf8').toString('base64')
      };
      object.encoding = 0;
      return object;
    };

    AuthPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return AuthPacket;

  })(Packet);

  HeartbeatPacket = (function(_super) {

    __extends(HeartbeatPacket, _super);

    function HeartbeatPacket() {
      return HeartbeatPacket.__super__.constructor.apply(this, arguments);
    }

    HeartbeatPacket.prototype.generate = function(account_id, counter) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.keys = ['operation', 'source', 'timestamp', 'clientId', 'timeToLive', 'messageId', 'destination', 'headers', 'body'];
      object.object = {
        operation: 'performLCDSHeartBeat',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'loginService',
        headers: this.generateHeaders(),
        body: [account_id, this.options.authToken, counter, new Date().toString().slice(0, -6)]
      };
      object.encoding = 0;
      return object;
    };

    HeartbeatPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return HeartbeatPacket;

  })(Packet);

  LookupPacket = (function(_super) {

    __extends(LookupPacket, _super);

    function LookupPacket() {
      return LookupPacket.__super__.constructor.apply(this, arguments);
    }

    LookupPacket.prototype.generate = function(name) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.keys = ['source', 'operation', 'timestamp', 'messageId', 'clientId', 'timeToLive', 'body', 'destination', 'headers'];
      object.object = {
        operation: 'getSummonerByName',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'summonerService',
        headers: this.generateHeaders(),
        body: [name]
      };
      object.encoding = 0;
      return object;
    };

    LookupPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return LookupPacket;

  })(Packet);

  GetSummonerDataPacket = (function(_super) {

    __extends(GetSummonerDataPacket, _super);

    function GetSummonerDataPacket() {
      return GetSummonerDataPacket.__super__.constructor.apply(this, arguments);
    }

    GetSummonerDataPacket.prototype.generate = function(account_id) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.keys = ['source', 'operation', 'timestamp', 'messageId', 'clientId', 'timeToLive', 'body', 'destination', 'headers'];
      object.object = {
        operation: 'getAllPublicSummonerDataByAccount',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'summonerService',
        headers: this.generateHeaders(),
        body: [account_id]
      };
      object.encoding = 0;
      return object;
    };

    GetSummonerDataPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return GetSummonerDataPacket;

  })(Packet);

  AggregatedStatsPacket = (function(_super) {

    __extends(AggregatedStatsPacket, _super);

    function AggregatedStatsPacket() {
      return AggregatedStatsPacket.__super__.constructor.apply(this, arguments);
    }

    AggregatedStatsPacket.prototype.generate = function(account_id) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.key = ['source', 'operation', 'timestamp', 'messageId', 'clientId', 'timeToLive', 'body', 'destination', 'headers'];
      object.object = {
        operation: 'getAggregatedStats',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'playerStatsService',
        headers: this.generateHeaders(),
        body: [account_id, 'CLASSIC', 'CURRENT']
      };
      object.encoding = 0;
      return object;
    };

    AggregatedStatsPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return AggregatedStatsPacket;

  })(Packet);

  PlayerStatsPacket = (function(_super) {

    __extends(PlayerStatsPacket, _super);

    function PlayerStatsPacket() {
      return PlayerStatsPacket.__super__.constructor.apply(this, arguments);
    }

    PlayerStatsPacket.prototype.generate = function(account_id) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.keys = ['source', 'operation', 'timestamp', 'messageId', 'clientId', 'timeToLive', 'body', 'destination', 'headers'];
      object.object = {
        operation: 'retrievePlayerStatsByAccountId',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'playerStatsService',
        headers: this.generateHeaders(),
        body: [account_id, 'CURRENT']
      };
      object.encoding = 0;
      return object;
    };

    PlayerStatsPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return PlayerStatsPacket;

  })(Packet);

  RecentGamesPacket = (function(_super) {

    __extends(RecentGamesPacket, _super);

    function RecentGamesPacket() {
      return RecentGamesPacket.__super__.constructor.apply(this, arguments);
    }

    RecentGamesPacket.prototype.generate = function(account_id) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.keys = ['source', 'operation', 'timestamp', 'messageId', 'clientId', 'timeToLive', 'body', 'destination', 'headers'];
      object.object = {
        operation: 'getRecentGames',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'playerStatsService',
        headers: this.generateHeaders(),
        body: [account_id]
      };
      object.encoding = 0;
      return object;
    };

    RecentGamesPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return RecentGamesPacket;

  })(Packet);

  GetTeamForSummonerPacket = (function(_super) {

    __extends(GetTeamForSummonerPacket, _super);

    function GetTeamForSummonerPacket() {
      return GetTeamForSummonerPacket.__super__.constructor.apply(this, arguments);
    }

    GetTeamForSummonerPacket.prototype.generate = function(summoner_id) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.keys = ['source', 'operation', 'timestamp', 'messageId', 'clientId', 'timeToLive', 'body', 'destination', 'headers'];
      object.object = {
        operation: 'findPlayer',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'summonerTeamService',
        headers: this.generateHeaders(),
        body: [summoner_id]
      };
      object.encoding = 0;
      return object;
    };

    GetTeamForSummonerPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return GetTeamForSummonerPacket;

  })(Packet);

  GetTeamByIdPacket = (function(_super) {

    __extends(GetTeamByIdPacket, _super);

    function GetTeamByIdPacket() {
      return GetTeamByIdPacket.__super__.constructor.apply(this, arguments);
    }

    GetTeamByIdPacket.prototype.generate = function(team_id) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.keys = ['source', 'operation', 'timestamp', 'messageId', 'clientId', 'timeToLive', 'body', 'destination', 'headers'];
      object.object = {
        operation: 'findTeamById',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'summonerTeamService',
        headers: this.generateHeaders(),
        body: [this.generateBody(team_id)]
      };
      object.encoding = 0;
      return object;
    };

    GetTeamByIdPacket.prototype.generateBody = function(team_id) {
      var body;
      body = new ASObject();
      body.name = 'com.riotgames.team.TeamId';
      body.keys = ['dataVersion', 'fullId', 'futureData'];
      body.object = {
        dataVersion: null,
        fullId: team_id,
        futureData: null
      };
      body.encoding = 0;
      return body;
    };

    GetTeamByIdPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return GetTeamByIdPacket;

  })(Packet);

  GetSummonerNamePacket = (function(_super) {

    __extends(GetSummonerNamePacket, _super);

    function GetSummonerNamePacket() {
      return GetSummonerNamePacket.__super__.constructor.apply(this, arguments);
    }

    GetSummonerNamePacket.prototype.generate = function(name) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.keys = ['source', 'operation', 'timestamp', 'messageId', 'clientId', 'timeToLive', 'body', 'destination', 'headers'];
      object.object = {
        operation: 'getSummonerNames',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'summonerService',
        headers: this.generateHeaders(),
        body: [name]
      };
      object.encoding = 0;
      return object;
    };

    GetSummonerNamePacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return GetSummonerNamePacket;

  })(Packet);

  GetSpectatorInfoPacket = (function(_super) {

    __extends(GetSpectatorInfoPacket, _super);

    function GetSpectatorInfoPacket() {
      return GetSpectatorInfoPacket.__super__.constructor.apply(this, arguments);
    }

    GetSpectatorInfoPacket.prototype.generate = function(name) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.keys = ['source', 'operation', 'timestamp', 'messageId', 'clientId', 'timeToLive', 'body', 'destination', 'headers'];
      object.object = {
        operation: 'retrieveInProgressSpectatorGameInfo',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'gameService',
        headers: this.generateHeaders(),
        body: [name]
      };
      object.encoding = 0;
      return object;
    };

    GetSpectatorInfoPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return GetSpectatorInfoPacket;

  })(Packet);

  GetMasteryBookPacket = (function(_super) {

    __extends(GetMasteryBookPacket, _super);

    function GetMasteryBookPacket() {
      return GetMasteryBookPacket.__super__.constructor.apply(this, arguments);
    }

    GetMasteryBookPacket.prototype.generate = function(summoner_id) {
      var object;
      object = new ASObject();
      object.name = 'flex.messaging.messages.RemotingMessage';
      object.keys = ['source', 'operation', 'timestamp', 'messageId', 'clientId', 'timeToLive', 'body', 'destination', 'headers'];
      object.object = {
        operation: 'getMasteryBook',
        source: null,
        timestamp: 0,
        clientId: null,
        timeToLive: 0,
        messageId: uuid().toUpperCase(),
        destination: 'masteryBookService',
        headers: this.generateHeaders(),
        body: [summoner_id]
      };
      object.encoding = 0;
      return object;
    };

    GetMasteryBookPacket.prototype.generateHeaders = function() {
      var headers;
      headers = new ASObject();
      headers.name = '';
      headers.object = {
        DSId: this.options.dsid,
        DSRequestTimeout: 60,
        DSEndpoint: 'my-rtmps'
      };
      headers.encoding = 2;
      return headers;
    };

    return GetMasteryBookPacket;

  })(Packet);

  exports.ConnectPacket = ConnectPacket;

  exports.LoginPacket = LoginPacket;

  exports.AuthPacket = AuthPacket;

  exports.HeartbeatPacket = HeartbeatPacket;

  exports.LookupPacket = LookupPacket;

  exports.GetSummonerDataPacket = GetSummonerDataPacket;

  exports.AggregatedStatsPacket = AggregatedStatsPacket;

  exports.PlayerStatsPacket = PlayerStatsPacket;

  exports.RecentGamesPacket = RecentGamesPacket;

  exports.GetTeamForSummonerPacket = GetTeamForSummonerPacket;

  exports.GetTeamByIdPacket = GetTeamByIdPacket;

  exports.GetSummonerNamePacket = GetSummonerNamePacket;

  exports.GetSpectatorInfoPacket = GetSpectatorInfoPacket;

  exports.GetMasteryBookPacket = GetMasteryBookPacket;

}).call(this);
